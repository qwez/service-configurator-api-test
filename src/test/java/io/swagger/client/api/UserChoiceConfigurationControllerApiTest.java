/*
 * Service Configurator API Documentation
 * Documentation generated automatically
 *
 * OpenAPI spec version: 212
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.BasketItem;
import io.swagger.client.model.ConfigurationResponse;
import io.swagger.client.model.UserChoiceConfigurationRequest;
import org.testng.Assert;
import org.testng.annotations.Test;
import java.math.BigDecimal;
import java.util.List;

/**
 * API tests for UserChoiceConfigurationControllerApi
 */

public class UserChoiceConfigurationControllerApiTest {

    private final UserChoiceConfigurationControllerApi api = new UserChoiceConfigurationControllerApi();

    
    /**
     * configure
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test(dataProvider="UserChoiceConfigurationControllerApiTest", dataProviderClass = TestDataProvider.class)
    public void configureUsingPOSTTest(Integer storeCode, List<Integer> qty, List<Integer> srvId, BigDecimal expectedSum) throws ApiException {
        ConfigurationResponse response;
        UserChoiceConfigurationRequest request = new UserChoiceConfigurationRequest()
                .storeCode(storeCode);
        for (int i = 0; i < qty.size(); i++) {
            request.addItemsItem(
                    new BasketItem()
                        .quantity(qty.get(i))
                        .serviceId(srvId.get(i))
            );
        }
        try {
            response = api.configureUsingPOST(request);
        } catch (ApiException e) {
            System.err.println(e.getCode());
            System.err.println(e.getResponseBody());
            throw e;
        }

        Assert.assertEquals(response.getSum().setScale(2), expectedSum.setScale(2));
        System.out.println(response.toString());
    }
}
